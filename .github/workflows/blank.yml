name: Airtable to Supabase Sync

on:
  schedule:
    - cron: '* * * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install @supabase/supabase-js axios dotenv
        
    - name: Create sync script
      run: |
        mkdir -p scripts
        cat > scripts/sync.cjs << 'EOF'
        require('dotenv').config();
        const { createClient } = require('@supabase/supabase-js');
        const axios = require('axios');
        
        const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_KEY);
        
        async function syncAirtableToSupabase() {
          console.log('🔄 Airtable sync başlatılıyor...');
          
          try {
            const response = await axios.get(
              `https://api.airtable.com/v0/${process.env.AIRTABLE_BASE_ID}/${process.env.AIRTABLE_TABLE_NAME}`,
              {
                headers: {
                  'Authorization': `Bearer ${process.env.AIRTABLE_API_KEY}`,
                  'Content-Type': 'application/json'
                }
              }
            );
            
            const records = response.data.records;
            console.log(`📋 ${records.length} kayıt bulundu`);
            
            for (const record of records) {
              const fields = record.fields;
              
              if (fields.Status === 'Done') {
                console.log(`🔄 ${fields.Name} işleniyor...`);
                
                // Post verisi hazırla
                const postData = {
                  title: fields.Name,
                  slug: fields.Name.toLowerCase().replace(/[^a-z0-9\s-]/g, '').replace(/\s+/g, '-'),
                  content: fields.Notes || '',
                  excerpt: fields.Notes ? fields.Notes.substring(0, 200) + '...' : '',
                  featured_image_url: fields.Attachments?.[0]?.url || null,
                  author_name: fields.Assignee?.[0]?.name || 'Anonim',
                  status: 'published',
                  tags: fields.Tags || [],
                  published_at: new Date().toISOString()
                };
                
                // Supabase'e kaydet
                const { data, error } = await supabase
                  .from('posts')
                  .upsert(postData, { onConflict: 'title' })
                  .select()
                  .single();
                  
                if (error) {
                  console.error(`❌ ${fields.Name} hatası:`, error);
                } else {
                  console.log(`✅ ${fields.Name} başarıyla işlendi`);
                }
              }
            }
            
            console.log('✅ Senkronizasyon tamamlandı!');
            
          } catch (error) {
            console.error('❌ Hata:', error.message);
          }
        }
        
        syncAirtableToSupabase();
        EOF
        
    - name: Run Airtable sync
      env:
        AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
        AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
        AIRTABLE_TABLE_NAME: ${{ secrets.AIRTABLE_TABLE_NAME }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        node scripts/sync.cjs
        
    - name: Log completion
      run: |
        echo "✅ Airtable sync completed at $(date)"
